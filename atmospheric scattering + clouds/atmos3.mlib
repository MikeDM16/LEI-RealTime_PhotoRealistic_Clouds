<?xml version="1.0" ?>
<materialLib name="atmos">

	<renderTargets>
		<renderTarget name ="dummy">
			<SIZE width="GridSize" height="GridSize" />
			<colors>
				<color name="dummy" internalFormat="RGBA" />
			</colors>
		</renderTarget>
		<renderTarget name ="scene">
			<SIZE width="1024" height="1024" />
			<CLEAR_VALUES r=0 g=0 b=0 a=0 />
			<colors>
				<color name="pos" internalFormat="RGBA32F" />
				<color name="normal" internalFormat="RGBA32F" />
				<color name="color" internalFormat="RGBA" />
			</colors>
		</renderTarget>
	</renderTargets>

	<buffers>
		<buffer name="dummy" >
			<SIZE value = 16 />
			<structure>
				<field value="FLOAT" />
				<field value="FLOAT" />
				<field value="FLOAT" />
				<field value="FLOAT" />
			</structure>
		</buffer>
	</buffers>

	<states>
		<state name="voxelization">
			<CULL_FACE value=0 />
			<DEPTH_TEST value=0 />
		</state>

		<state name="Blend-NoCull">
			<CULL_FACE value=0 />
			<BLEND value=True />
			<BLEND_SRC value=SRC_ALPHA />
			<BLEND_DST value=ONE_MINUS_SRC_ALPHA />
		</state>
	</states>

	<textures>
		<texture name="shapeNoise" 	filename="texturas/noiseShape.tga" />
		<texture name="erosionNoise" filename="texturas/noiseErosion.tga" />
		<texture name="weatherTexture" filename="texturas/weatherTexture.jpg" />
	</textures>

	<shaders>
		<shader name="ground" 	vs = "shaders/ground.vert" 
								ps = "shaders/ground.frag" />

		<shader name="box" 		vs = "shaders/box.vert" 
								ps = "shaders/box.frag" />
		
		<shader name="sky" 		vs = "shaders/sky.vert" 
								ps = "shaders/sky3.frag" />

		<shader name="clouds" 	vs = "shaders/showVoxels.vert"
								gs = "shaders/showVoxels.geom"
								ps = "shaders/showVoxels.frag" />
	</shaders>
	
	
	<materials>
		<material name="ground">
			<color>
				<DIFFUSE r="0.8" g="0.8" b="0.8" a="1.0" />
			</color>
			<shader name="ground">
				<values>
					<valueof uniform="m_pvm" 
							 type="RENDERER" context="CURRENT" 
							 component="PROJECTION_VIEW_MODEL" />
							 							 
					<valueof uniform="diffuse" 
							 type="COLOR" context="CURRENT" 
							 component="DIFFUSE" />
							 
				</values>
			</shader>
		</material>

		<material name="box">
			<color>
				<DIFFUSE r="0.8" g="0.8" b="0.8" a="1.0" />
			</color>
			<shader name="box">
				<values>
					<valueof uniform="m_pvm" 
							 type="RENDERER" context="CURRENT" 
							 component="PROJECTION_VIEW_MODEL" />
							 							 
					<valueof uniform="diffuse" 
							 type="COLOR" context="CURRENT" 
							 component="DIFFUSE" />
							 
				</values>
			</shader>
		</material>

		<material name="sky">
			<color>
				<DIFFUSE r="0.4" g="0.4" b="0.8" a="1.0" />
			</color>
			<shader name="sky">
				<values>
					<!--sky values-->
					<valueof uniform="m_pvm" 
							 type="RENDERER" context="CURRENT" 
							 component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="Hr"
							type="RENDERER" context="CURRENT"
							component="hr" />
					<valuepf uniform="Hm"
							type="RENDERER" context="CURRENT"
							component="hm" />
					<valuepf uniform="g"
							type="RENDERER" context="CURRENT"
							component="g" />
					<valueof uniform="betaR"
							type="RENDERER" context="CURRENT"
							component="betaR" />
					<valueof uniform="betaMf"
							type="RENDERER" context="CURRENT"
							component="betaM" />
					<valueof uniform="sunAngles"
							type="RENDERER" context="CURRENT"
							component="sunAngles" />
					<valueof uniform="camView"
							type="CAMERA" context="MainCamera"
							component="VIEW" />
					<valueof uniform="camUp"
							type="CAMERA" context="MainCamera"
							component="UP" />
					<valueof uniform="fov"
							type="CAMERA" context="MainCamera"
							component="FOV" />
					<valueof uniform="ratio"
							type="VIEWPORT" context="MainViewport"
							component="ABSOLUTE_RATIO" />
					<valueof uniform="cameraMode"
							type="RENDERER" context="CURRENT"
							component="cameraMode" />
					<valueof uniform="exposure"
							type="RENDERER" context="CURRENT"
							component="exposure" />
					<valueof uniform="divisions"
							type="RENDERER" context="CURRENT"
							component="steps" />
					<valueof uniform="divisionsLightRay"
							type="RENDERER" context="CURRENT"
							component="steps light ray" />
					<valueof uniform="sampling"
							type="RENDERER" context="CURRENT"
							component="sampling" />
				</values>
			</shader>
		</material>
		
		<material name="clouds">
			<color>
				<DIFFUSE r="0.4" g="0.4" b="0.8" a="1.0" />
			</color>
			<shader name="clouds">
				<values>
					<!--sky values-->
					<valueof uniform="m_pvm" 
							 type="RENDERER" context="CURRENT" 
							 component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="Hr"
							type="RENDERER" context="CURRENT"
							component="hr" />
					<valuepf uniform="Hm"
							type="RENDERER" context="CURRENT"
							component="hm" />
					<valuepf uniform="g"
							type="RENDERER" context="CURRENT"
							component="g" />
					<valueof uniform="betaR"
							type="RENDERER" context="CURRENT"
							component="betaR" />
					<valueof uniform="betaMf"
							type="RENDERER" context="CURRENT"
							component="betaM" />
					<valueof uniform="sunAngles"
							type="RENDERER" context="CURRENT"
							component="sunAngles" />
					<valueof uniform="camView"
							type="CAMERA" context="MainCamera"
							component="VIEW" />
					<valueof uniform="camUp"
							type="CAMERA" context="MainCamera"
							component="UP" />
					<valueof uniform="fov"
							type="CAMERA" context="MainCamera"
							component="FOV" />
					<valueof uniform="ratio"
							type="VIEWPORT" context="MainViewport"
							component="ABSOLUTE_RATIO" />
					<valueof uniform="cameraMode"
							type="RENDERER" context="CURRENT"
							component="cameraMode" />
					<valueof uniform="exposure"
							type="RENDERER" context="CURRENT"
							component="exposure" />
					<valueof uniform="divisions"
							type="RENDERER" context="CURRENT"
							component="steps" />
					<valueof uniform="divisionsLightRay"
							type="RENDERER" context="CURRENT"
							component="steps light ray" />
					<valueof uniform="sampling"
							type="RENDERER" context="CURRENT"
							component="sampling" />

					<!--clouds values-->	
					<valueof uniform="RayOrigin"
							type="CAMERA" context="CURRENT"
							component="POSITION" />
					<valueof uniform="FOV"
							type="CAMERA" context="CURRENT"
							component="FOV" />
					<valueof uniform="RATIO"
							type="VIEWPORT" context="MainViewport"
							component="ABSOLUTE_RATIO" />
					<valueof uniform="PVM"
							type="RENDERER" context="CURRENT"
							component="PROJECTION_VIEW_MODEL" />
					<valueof uniform="m_view"
							type="RENDERER" context="CURRENT"
							component="VIEW" />
					<valueof uniform="VM"
							type="RENDERER" context="CURRENT"
							component="VIEW_MODEL" />
					<valueof uniform="WindowSize"
							type="VIEWPORT" context="CURRENT"
							component="ABSOLUTE_SIZE" />
					<valueof uniform="GridSize"
							type="PASS" context="CURRENT"
							component="GridSize" />
					
					<valueof uniform="shapeNoise"
							type="TEXTURE_BINDING" context="CURRENT" id=1
							component="UNIT" />
					<valueof uniform="shapeWidth"
							type="TEXTURE" context="shapeNoise" id=1
							component="WIDTH" />
					<valueof uniform="shapeHeight"
							type="TEXTURE" context="shapeNoise" id=1
							component="HEIGHT" />

					<valueof uniform="erosionNoise"
							type="TEXTURE_BINDING" context="CURRENT" id=2
							component="UNIT" />
					<valueof uniform="erosionWidth"
							type="TEXTURE" context="erosionNoise" id=2
							component="WIDTH" />
					<valueof uniform="erosionHeight"
							type="TEXTURE" context="erosionNoise" id=2
							component="HEIGHT" />

					<valueof uniform="weatherTexture"
							type="TEXTURE_BINDING" context="CURRENT" id=3
							component="UNIT" />
					<valueof uniform="weatherWidth"
							type="TEXTURE" context="weatherTexture" id=3
							component="WIDTH" />
					<valueof uniform="weatherHeight"
							type="TEXTURE" context="weatherTexture" id=3
							component="HEIGHT" />
					
					<valueof uniform="layer_Height"
							type="COLOR" context="CURRENT"
							component="layer_Height" />
					<valueof uniform="g0_phase_function"
							type="COLOR" context="CURRENT"
							component="g0_phase_function" />
					<valueof uniform="g1_phase_function"
							type="COLOR" context="CURRENT"
							component="g1_phase_function" />
					<valueof uniform="phase_mix"
							type="COLOR" context="CURRENT"
							component="phase_mix" />
	
					<valueof uniform="sigmaAbsorption"
							type="COLOR" context="CURRENT"
							component="sigmaAbsorption" />
					<valueof uniform="sigmaScattering"
							type="COLOR" context="CURRENT"
							component="sigmaScattering" />	

					<valueof uniform="threshold_erosion"
							type="COLOR" context="CURRENT"
							component="threshold_erosion" />
					<valueof uniform="erosion_amount"
							type="COLOR" context="CURRENT"
							component="erosion_amount" />
					
					<valueof uniform="volume_steps"
							type="COLOR" context="CURRENT"
							component="volume_steps" />
					<valueof uniform="gamma"
							type="COLOR" context="CURRENT"
							component="gamma" />
															
					<valueof uniform="lDir"
							type="LIGHT" context="Sun"
							component="DIRECTION" />
					<valueof uniform="lPosition"
							type="LIGHT" context="Sun"
							component="POSITION" />	
					<valueof uniform="lDiffuse"
							type="LIGHT" context="Sun"
							component="COLOR" />

					<valueof uniform="aabbMin"
							type="PASS" context="CURRENT"
							component="aabbMin" />
					<valueof uniform="aabbMax" 
							type="PASS" context="CURRENT"
							component="aabbMax" />
				</values>
			</shader>
			
			<textures>
				<texture UNIT=1 name="shapeNoise" >
					<MIN_FILTER value="NEAREST_MIPMAP_NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=2 name="erosionNoise" >
					<MIN_FILTER value="NEAREST_MIPMAP_NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
				<texture UNIT=3 name="weatherTexture" >
					<MIN_FILTER value="NEAREST_MIPMAP_NEAREST" />
					<MAG_FILTER value="NEAREST" />
					<WRAP_S value="CLAMP_TO_BORDER" />
					<WRAP_T value="CLAMP_TO_BORDER" />
					<WRAP_R value="CLAMP_TO_BORDER" />
				</texture>
			</textures>

			<state name="Blend-NoCull" />
		</material>
		

	</materials>
</materialLib>
